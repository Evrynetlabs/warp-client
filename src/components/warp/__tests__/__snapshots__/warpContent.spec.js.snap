// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WarpContent When clicking a transfer button When source accountbalance is invalid should match an invalid feedback snapshot 1`] = `
<Form
  className="WarpContent__form"
  inline={false}
  name="form"
  onSubmit={[Function]}
>
  <CardBody
    className="WarpContent__form__content"
  >
    <Container
      fluid={true}
    >
      <ForwardRef
        noGutters={false}
      >
        <Col>
          <FormGroup
            controlId="sourceAccountNumber"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              <span>
                From:
              </span>
            </FormLabel>
            <FormControl
              className="WarpContent__form__content__input__src WarpContent__form__content__input"
              name="sourceAccount"
              onChange={[Function]}
              placeholder="Account Number"
              type="text"
              value=""
            />
          </FormGroup>
        </Col>
        <Col>
          <FormGroup
            controlId="destinationAccountNumber"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              <span>
                To:
              </span>
            </FormLabel>
            <FormControl
              className="WarpContent__form__content__input__dest WarpContent__form__content__input"
              name="destinationAccount"
              onChange={[Function]}
              placeholder="Account Number"
              type="text"
              value=""
            />
          </FormGroup>
        </Col>
      </ForwardRef>
      <ForwardRef
        className="WarpContent__form__content__amount"
        noGutters={false}
      >
        <Col>
          <FormGroup
            controlId="assetAmount"
          >
            <FormControl
              className="WarpContent__form__content__amount__input"
              isInvalid={true}
              name="amount"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="0.00"
              type="text"
              value="1"
            />
            <Feedback
              type="invalid"
            >
              Insufficient Amount
            </Feedback>
          </FormGroup>
        </Col>
        <Col>
          <FormGroup
            controlId="assetSelection"
          >
            <FormControl
              as="select"
              name="asset"
              onChange={[Function]}
              value="EVRY"
            >
              <option
                key="EVRY"
                value="EVRY"
              >
                EVRY
              </option>
            </FormControl>
          </FormGroup>
        </Col>
      </ForwardRef>
    </Container>
  </CardBody>
  <CardFooter
    className="WarpContent__footer"
  >
    <Container
      fluid={true}
    >
      <ForwardRef
        noGutters={false}
      >
        <Col
          className="WarpContent__footer__btn"
        >
          <Button
            active={false}
            disabled={false}
            type="submit"
            variant="dark"
          >
            Transfer
          </Button>
        </Col>
      </ForwardRef>
    </Container>
  </CardFooter>
</Form>
`;

exports[`WarpContent When clicking a transfer button When source accountbalance is valid should match an valid feedback snapshot 1`] = `
<Form
  className="WarpContent__form"
  inline={false}
  name="form"
  onSubmit={[Function]}
>
  <CardBody
    className="WarpContent__form__content"
  >
    <Container
      fluid={true}
    >
      <ForwardRef
        noGutters={false}
      >
        <Col>
          <FormGroup
            controlId="sourceAccountNumber"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              <span>
                From:
              </span>
            </FormLabel>
            <FormControl
              className="WarpContent__form__content__input__src WarpContent__form__content__input"
              name="sourceAccount"
              onChange={[Function]}
              placeholder="Account Number"
              type="text"
              value=""
            />
          </FormGroup>
        </Col>
        <Col>
          <FormGroup
            controlId="destinationAccountNumber"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              <span>
                To:
              </span>
            </FormLabel>
            <FormControl
              className="WarpContent__form__content__input__dest WarpContent__form__content__input"
              name="destinationAccount"
              onChange={[Function]}
              placeholder="Account Number"
              type="text"
              value=""
            />
          </FormGroup>
        </Col>
      </ForwardRef>
      <ForwardRef
        className="WarpContent__form__content__amount"
        noGutters={false}
      >
        <Col>
          <FormGroup
            controlId="assetAmount"
          >
            <FormControl
              className="WarpContent__form__content__amount__input"
              isInvalid={false}
              name="amount"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="0.00"
              type="text"
              value="1"
            />
            <Feedback
              type="invalid"
            >
              Insufficient Amount
            </Feedback>
          </FormGroup>
        </Col>
        <Col>
          <FormGroup
            controlId="assetSelection"
          >
            <FormControl
              as="select"
              name="asset"
              onChange={[Function]}
              value="EVRY"
            >
              <option
                key="EVRY"
                value="EVRY"
              >
                EVRY
              </option>
            </FormControl>
          </FormGroup>
        </Col>
      </ForwardRef>
    </Container>
  </CardBody>
  <CardFooter
    className="WarpContent__footer"
  >
    <Container
      fluid={true}
    >
      <ForwardRef
        noGutters={false}
      >
        <Col
          className="WarpContent__footer__btn"
        >
          <Button
            active={false}
            disabled={false}
            type="submit"
            variant="dark"
          >
            Transfer
          </Button>
        </Col>
      </ForwardRef>
    </Container>
  </CardFooter>
</Form>
`;

exports[`WarpContent should render correspondingly 1`] = `
<Form
  className="WarpContent__form"
  inline={false}
  name="form"
  onSubmit={[Function]}
>
  <CardBody
    className="WarpContent__form__content"
  >
    <Container
      fluid={true}
    >
      <ForwardRef
        noGutters={false}
      >
        <Col>
          <FormGroup
            controlId="sourceAccountNumber"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              <span>
                From:
              </span>
            </FormLabel>
            <FormControl
              className="WarpContent__form__content__input__src WarpContent__form__content__input"
              name="sourceAccount"
              onChange={[Function]}
              placeholder="Account Number"
              type="text"
              value=""
            />
          </FormGroup>
        </Col>
        <Col>
          <FormGroup
            controlId="destinationAccountNumber"
          >
            <FormLabel
              column={false}
              srOnly={false}
            >
              <span>
                To:
              </span>
            </FormLabel>
            <FormControl
              className="WarpContent__form__content__input__dest WarpContent__form__content__input"
              name="destinationAccount"
              onChange={[Function]}
              placeholder="Account Number"
              type="text"
              value=""
            />
          </FormGroup>
        </Col>
      </ForwardRef>
      <ForwardRef
        className="WarpContent__form__content__amount"
        noGutters={false}
      >
        <Col>
          <FormGroup
            controlId="assetAmount"
          >
            <FormControl
              className="WarpContent__form__content__amount__input"
              isInvalid={null}
              name="amount"
              onBlur={[Function]}
              onChange={[Function]}
              placeholder="0.00"
              type="text"
              value=""
            />
            <Feedback
              type="invalid"
            >
              Insufficient Amount
            </Feedback>
          </FormGroup>
        </Col>
        <Col>
          <FormGroup
            controlId="assetSelection"
          >
            <FormControl
              as="select"
              name="asset"
              onChange={[Function]}
              value="EVRY"
            />
          </FormGroup>
        </Col>
      </ForwardRef>
    </Container>
  </CardBody>
  <CardFooter
    className="WarpContent__footer"
  >
    <Container
      fluid={true}
    >
      <ForwardRef
        noGutters={false}
      >
        <Col
          className="WarpContent__footer__btn"
        >
          <Button
            active={false}
            disabled={false}
            type="submit"
            variant="dark"
          >
            Transfer
          </Button>
        </Col>
      </ForwardRef>
    </Container>
  </CardFooter>
</Form>
`;
